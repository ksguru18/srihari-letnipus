<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   
   <groupId>com.intel.mtwilson.packages</groupId>
   <artifactId>host-verification-service-docker</artifactId>
   <version>4.5-SNAPSHOT</version>
    
   <packaging>pom</packaging>
   <description>Host Verification Service Docker Containerization Zip Package</description>

   <profiles>
      <profile>
         <activation>
            <os>
               <family>unix</family>
            </os>
         </activation>
         <build>
             <plugins>
                 <!-- Copy the main installer bin file -->
                 <plugin>
                     <groupId>org.apache.maven.plugins</groupId>
                     <artifactId>maven-project-info-reports-plugin</artifactId>
                     <version>2.9</version>
                 </plugin>

                 <plugin>
                     <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-dependency-plugin</artifactId>
                  <version>2.4</version>
                  <executions>
                     <execution>
                        <id>copy</id>
                        <phase>generate-resources</phase>
                        <goals>
                           <goal>copy</goal>
                        </goals>
                        <configuration>
                           <artifactItems>
                              <artifactItem>
                                 <groupId>com.intel.mtwilson.packages</groupId>
                                 <artifactId>host-verification-service-linux</artifactId>
                                 <version>${project.version}</version>
                                 <type>bin</type>
                                 <outputDirectory>${project.build.directory}/application</outputDirectory>
                                 <destFileName>host-verification-service-linux-${project.version}.bin</destFileName>
                              </artifactItem>
                           </artifactItems>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>

               <!-- Copy all the src files for Docker-compose from src/main/resources -->
               <plugin>
                  <artifactId>maven-resources-plugin</artifactId>
                  <version>2.6</version>
                  <executions>
                     <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                           <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                           <includeEmptyDirs>true</includeEmptyDirs>
                           <outputDirectory>${project.build.directory}/application</outputDirectory>
                           <resources>
                              <resource>
                                 <directory>src/main/resources</directory>
                                 <filtering>true</filtering>
                              </resource>
                           </resources>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
     
               <!-- Create the zip file -->
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <version>1.8</version>
                  <executions>
                     <execution>
                        <id>default-cli</id>
                        <phase>process-resources</phase>
                        <goals>
                           <goal>run</goal>
                        </goals>
                        <configuration>
                           <target>
                              <mkdir dir="${project.build.directory}/application/yum.repos.d" />
                              <zip destfile="${project.build.directory}/${project.artifactId}-${project.version}.zip">
                                 <fileset dir="${project.build.directory}/application" />
                              </zip>
                              <attachartifact file="${project.build.directory}/${project.artifactId}-${project.version}.zip"/>
                           </target>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>

            </plugins>
         </build>
      </profile>

      <!-- activate this profile with  -Dsigning on the command line -->
      <profile>
         <id>signing</id>         
         <activation>
             <property>
                 <name>signing</name>
             </property>
             <os>
                 <family>unix</family>
             </os>
         </activation>
         <build>
             <plugins>
                 <plugin>
                     <groupId>org.apache.maven.plugins</groupId>
                     <artifactId>maven-antrun-plugin</artifactId>
                     <version>1.8</version>
                     <executions>
                         <execution>
                             <id>code-signing</id>
                             <phase>prepare-package</phase>
                             <goals>
                                 <goal>run</goal>
                             </goals>
                             <configuration>
                                 <target>
                                     <exec executable="/bin/bash" failonerror="true">
                                         <redirector output="${project.build.directory}/intel-signfile.log" alwayslog="true"/>
                                         <arg value="intel-signfile.sh"/>
                                         <arg value="${project.build.directory}/${project.artifactId}-${project.version}.zip"/>
                                     </exec>
                                 </target>
                             </configuration>
                         </execution>
                         <execution>
                             <id>attach-artifacts-code-signing</id>
                             <phase>package</phase>
                             <goals>
                                 <goal>run</goal>
                             </goals>
                             <configuration>
                                 <target>
                                     <attachartifact file="${project.build.directory}/${project.artifactId}-${project.version}.zip.README.sig" type="zip.README.sig"/>
                                     <attachartifact file="${project.build.directory}/${project.artifactId}-${project.version}.zip.README"  type="zip.README"/>
                                 </target>
                             </configuration>
                         </execution>
                     </executions>
                 </plugin>
             </plugins>
         </build>
      </profile>
   </profiles>

</project>
